{"version":3,"sources":["Components/ContactForm/ContactForm.js","Components/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactListItem/ContactListItem.module.scss"],"names":["ContactForm","onAddContact","useState","name","setName","number","setNumber","handleChange","e","target","value","onSubmit","preventDefault","type","onChange","required","className","styles","margin","pattern","title","btn","ContactListItem","el","delCont","listItem","onClick","id","ContactList","contacts","deleteContact","map","contact","Filter","handleChangeFilter","filter","App","JSON","parse","window","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","find","alert","uuidv4","length","event","toLowerCase","includes","contactId","root","document","querySelector","ReactDOM","render","StrictMode","module","exports"],"mappings":"iRAkEeA,MA9Df,YAAwC,IAAjBC,EAAgB,EAAhBA,aACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACD,SAATP,EAIJG,EAAUI,GAHRN,EAAQM,IAgBZ,OACE,uBAAMC,SAPa,SAAAH,GACnBA,EAAEI,iBACFX,EAAaE,EAAME,GANnBD,EAAQ,IACRE,EAAU,KAUV,UACE,yCAEE,uBACA,uBACEO,KAAK,OACLH,MAAOP,EACPA,KAAK,OACLW,SAAUP,EACVQ,UAAQ,OAGZ,uBACA,2CAEE,uBACA,uBACEC,UAAWC,IAAOC,OAClBR,MAAOL,EACPQ,KAAK,MACLV,KAAK,SACLgB,QAAQ,yFACRC,MAAM,+FACNL,UAAQ,EACRD,SAAUP,OAGd,uBACA,wBAAQS,UAAWC,IAAOI,IAAKR,KAAK,SAApC,6BCzBSS,EA1BS,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAAP,OACtB,qBAAIR,UAAWC,IAAOQ,SAAtB,UACGF,EAAGpB,KADN,KACcoB,EAAGlB,OACdmB,GACC,wBACER,UAAWC,IAAOI,IAClBK,QAAS,WACPF,EAAQD,EAAGI,KAHf,wBCUSC,EAdK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,cAAb,OAClB,kCACE,6BACGD,EAASE,KAAI,SAAAC,GAAO,OACnB,cAAC,EAAD,CAEET,GAAIS,EACJR,QAASM,GAFJE,EAAQL,YCURM,EAhBF,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,mBAAoBC,EAAa,EAAbA,OAClC,OACE,kCACE,0DAEE,uBACErB,SAAUoB,EACVxB,MAAOyB,EACPhC,KAAK,SACLU,KAAK,e,QCiDAuB,MArDf,WAAgB,IAAD,EACb,EAAgClC,mBAAQ,UACtCmC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBADD,QACiB,IADzD,mBAAOZ,EAAP,KAAiBa,EAAjB,KAGA,EAA4BxC,mBAAS,IAArC,mBAAOiC,EAAP,KAAeQ,EAAf,KAkCA,OAhCAC,qBAAU,WACRL,OAAOC,aAAaK,QAAQ,WAAYR,KAAKS,UAAUjB,MACtD,CAACA,IA+BF,gCACE,2CACA,cAAC,EAAD,CAAa5B,aA/BE,SAACE,EAAME,GACxB,GAAIwB,EAASkB,MAAK,SAAAf,GAAO,OAAI7B,IAAS6B,EAAQ7B,QAC5C6C,MAAM7C,EAAO,+BADf,CAKA,IAAM6B,EAAU,CACdL,GAAIsB,cACJ9C,OACAE,UAEFqC,GAAY,SAAAlC,GAAC,4BAAQA,GAAR,CAAWwB,WAsBtB,0CACCH,EAASqB,OAAS,GACjB,cAAC,EAAD,CAAQhB,mBArBa,SAAAiB,GACzBR,EAAUQ,EAAM1C,OAAOC,QAoB6ByB,OAAQA,IAG1D,cAAC,EAAD,CAAaN,SAnBRA,EAASM,QAAO,SAAAN,GAAQ,OAC7BA,EAAS1B,KAAKiD,cAAcC,SAASlB,EAAOiB,kBAkBFtB,cAdxB,SAAAwB,GACpBZ,GAAY,SAAAlC,GAAC,OAAIA,EAAE2B,QAAO,SAAAH,GAAO,OAAIA,EAAQL,KAAO2B,eCtClDC,G,YAAOC,SAASC,cAAc,UAEpCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFL,I,kBCVFM,EAAOC,QAAU,CAAC,SAAW,kCAAkC,IAAM,6BAA6B,OAAS,mC","file":"static/js/main.19945985.chunk.js","sourcesContent":["import { useState } from 'react';\nimport styles from '../ContactListItem/ContactListItem.module.scss';\nimport PropTypes from 'prop-types';\n\nfunction ContactForm({ onAddContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n      return;\n    }\n    setNumber(value);\n  };\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onAddContact(name, number);\n    resetState();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <br />\n        <input\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <br />\n      <label>\n        Number\n        <br />\n        <input\n          className={styles.margin}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <br />\n      <button className={styles.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport styles from './ContactListItem.module.scss';\nimport PropTypes from 'prop-types';\n\nconst ContactListItem = ({ el, delCont }) => (\n  <li className={styles.listItem}>\n    {el.name}: {el.number}\n    {delCont && (\n      <button\n        className={styles.btn}\n        onClick={() => {\n          delCont(el.id);\n        }}\n      >\n        Delete\n      </button>\n    )}\n  </li>\n);\n\nContactListItem.propTypes = {\n  el: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n\n  delCont: PropTypes.func,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, deleteContact }) => (\n  <section>\n    <ul>\n      {contacts.map(contact => (\n        <ContactListItem\n          key={contact.id}\n          el={contact}\n          delCont={deleteContact}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nlet Filter = ({ handleChangeFilter, filter }) => {\n  return (\n    <section>\n      <label>\n        Find contacts by name\n        <input\n          onChange={handleChangeFilter}\n          value={filter}\n          name=\"filter\"\n          type=\"text\"\n        />\n      </label>\n    </section>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  handleChangeFilter: PropTypes.func,\n  filter: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(window.localStorage.getItem('contacts')) ?? [],\n  );\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    if (contacts.find(contact => name === contact.name)) {\n      alert(name + ' is already in contacts');\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    setContacts(e => [...e, contact]);\n  };\n\n  const handleChangeFilter = event => {\n    setFilter(event.target.value);\n  };\n\n  const filteredContact = () => {\n    return contacts.filter(contacts =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(e => e.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm onAddContact={addContact} />\n\n      <h2>Contacts</h2>\n      {contacts.length > 1 && (\n        <Filter handleChangeFilter={handleChangeFilter} filter={filter} />\n      )}\n\n      <ContactList contacts={filteredContact()} deleteContact={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport react from 'react';\nimport 'modern-normalize/modern-normalize.css';\nimport 'index.css';\nconst root = document.querySelector('#root');\n\nReactDOM.render(\n  <react.StrictMode>\n    <App />\n  </react.StrictMode>,\n  root,\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__akGv7\",\"btn\":\"ContactListItem_btn__Qpj93\",\"margin\":\"ContactListItem_margin__2DpwC\"};"],"sourceRoot":""}